unit SigIMP01_018;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ComCtrls, ToolWin, ImgList, ActnList, ExtCtrls, Grids, DBGrids,
  JvExControls, JvComponent, JvDBLookup, StdCtrls, DB, IBCustomDataSet,
  IBQuery;

type
  Tfrm_PesquisaListaPreco = class(TForm)
    ActionList1: TActionList;
    acOK: TAction;
    acClose: TAction;
    acClear: TAction;
    acFiltrar: TAction;
    Panel3: TPanel;
    GroupBox1: TGroupBox;
    Label1: TLabel;
    dlcCliente: TJvDBLookupCombo;
    Label3: TLabel;
    dlcFornecedor: TJvDBLookupCombo;
    GroupBox2: TGroupBox;
    dbgListas: TDBGrid;
    Cliente: TIBQuery;
    ds_cliente: TDataSource;
    Clientecod_cliente: TIBStringField;
    Fornecedor: TIBQuery;
    ds_Fornecedor: TDataSource;
    Fornecedorcod_fornecedor: TSmallintField;
    Fornecedorraz_social_reduz: TIBStringField;
    Lista: TIBQuery;
    ds_Lista: TDataSource;
    Listanum_lista: TSmallintField;
    Listaden_lista: TIBStringField;
    Listadat_cadastro: TDateField;
    rgSituacao: TRadioGroup;
    ImageList1: TImageList;
    Listacod_fornecedor: TSmallintField;
    Button1: TButton;
    Button2: TButton;
    Button3: TButton;
    procedure acOKExecute(Sender: TObject);
    procedure acCloseExecute(Sender: TObject);
    procedure acClearExecute(Sender: TObject);
    procedure acFiltrarExecute(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure dlcClienteChange(Sender: TObject);
    procedure dlcFornecedorChange(Sender: TObject);
    procedure dbgListasDblClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frm_PesquisaListaPreco: Tfrm_PesquisaListaPreco;

implementation

uses unConnection;

{$R *.dfm}

procedure Tfrm_PesquisaListaPreco.acOKExecute(Sender: TObject);
begin
    ModalResult := mrOk;
end;

procedure Tfrm_PesquisaListaPreco.acCloseExecute(Sender: TObject);
begin
    ModalResult := mrCancel;
end;

procedure Tfrm_PesquisaListaPreco.acClearExecute(Sender: TObject);
begin
  dlcCliente.ClearValue;
  Fornecedor.Close;
  dlcFornecedor.ClearValue;
  Lista.Close;
end;

procedure Tfrm_PesquisaListaPreco.acFiltrarExecute(Sender: TObject);
begin
  if dlcCliente.Value = '0' then Exit;

  with Lista do
  begin
    Close;
    SQL.Clear;
    SQL.Add('select a."num_lista", a."den_lista"||''(''||a."num_lista"||'')'' "den_lista", a."dat_cadastro",');
    SQL.Add('       a."cod_fornecedor"                                                                      ');
    SQL.Add('from "lista" a                                                                                 ');
    SQL.Add('where a."cod_empresa" = :cod_empresa                                                           ');
    SQL.Add('  and a."ies_situacao" = :ies_situacao                                                         ');
    SQL.Add('  and a."cod_cliente" = :cod_cliente                                                           ');
    SQL.Add('  and a."ies_tip_lista" = ''C''                                                                ');

    if dlcFornecedor.Value <> '0' then
    begin
      SQL.Add('  and exists (select *                                        ');
      SQL.Add('                from "lista_preco" b, "produto" c             ');
      SQL.Add('               where b."cod_empresa" = a."cod_empresa"        ');
      SQL.Add('                 and b."num_lista" = a."num_lista"            ');
      SQL.Add('                 and c."cod_empresa" = b."cod_empresa"        ');
      SQL.Add('                 and c."cod_produto" = b."cod_produto"        ');
      SQL.Add('                 and c."cod_fornecedor" = :cod_fornecedor)    ');

      ParamByName('cod_fornecedor').AsInteger := Fornecedorcod_fornecedor.AsInteger;
    end;
    SQL.Add('order by a."dat_cadastro" desc');

    ParamByName('cod_empresa').AsInteger := vgCod_Empresa;    
    ParamByName('cod_cliente').AsString := Clientecod_cliente.AsString;
    ParamByName('ies_situacao').AsString := Copy(rgSituacao.Items[rgSituacao.ItemIndex],1,1);

    Open;
  end;
end;

procedure Tfrm_PesquisaListaPreco.FormCreate(Sender: TObject);
begin
  with Cliente do
  begin
    ParamByName('login').Value := vgLogin;                          
    Open;
  end;
  Fornecedor.Open;
end;

procedure Tfrm_PesquisaListaPreco.dlcClienteChange(Sender: TObject);
begin
  with Fornecedor do
  begin
    Close;
    ParamByName('cod_empresa').AsInteger := vgCod_Empresa;
    ParamByName('cod_cliente').AsString := Clientecod_cliente.AsString;
    Open;
  end;
end;

procedure Tfrm_PesquisaListaPreco.dlcFornecedorChange(Sender: TObject);
begin
  acFiltrarExecute(nil);
end;

procedure Tfrm_PesquisaListaPreco.dbgListasDblClick(Sender: TObject);
begin
  ModalResult := mrOk;
end;

procedure Tfrm_PesquisaListaPreco.FormShow(Sender: TObject);
begin
  acFiltrarExecute(nil);
end;

end.
